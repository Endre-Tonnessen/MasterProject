## Configuration file for the experiment file

## The default values are designed to give to reasonable behaviour

## Note that any lines starting with a '#' character are ignored.
## By convention any lines starting with '##' are for comments and a single '#'
## is used to disable the option (and falling back to default behaviour),
## but may be re-enabled by removing this the '#' character.

## Parameters used in automating the workflow, particularly in snakemake.
## These are not required if the scripts are being run manually, but this is
## not recommended.
workflow:
  ## Location of the microscopy files
  image_dir: default_images

  ## Glob pattern for the microscopy files inside the image directory,
  ## if this not provided then fall back to a set of sensible default values.
  image_regex: '*.ims'

  ## User name
  ##   Human readable name for the experiment
  ##   This is used in organisation and plotting
  ##   Experiments with the same name will be combined by the plotting routines.
  experiment_name: gradient_method

  ## Location of the summary table created by createMetadataTable.py
  metadata_path: summary.csv

  ## Add this to the end of experiment name
  experiment_suffix:

image_processing:
  ## The width of one pixel in microns
  ##    IMPORTANT: The program will try to extract this value from
  ##    the microscope file's metadata. The value here is only used
  ##    if the metadata is missing or incomplete. This is especially
  ##    important for bare image files (ie. .tiff). You will recieve
  ##    a warning if this value is used.
  pixel_size: 0.1408

  ## Method for drawing the boundary, these are:
  ##   gradient: Find the maximum of the directional gradient
  ##   intensity: Find the point at which the intensity crosses a given threshold
  ##   Machine_learning_boundry_extraction: Machine learning based boundry extraction based on binary semantic image segmentation models.  
  ##         -> This is the correct setting for ML based boundry methods. !!! Remember to set the filepath to the model that is to be used!
  ##   ModelYolov8: Machine learning based boundry extraction which uses the YOLOv8. This one is outdated and should not be used. 
  method: gradient

  ## Filepath pointing towards the ML model for boundry extraction. Only relevant if a 'method' is set to 'Machine_learning_boundry_extraction'
  machine_learning_model_path:

  # Device the model runs on, either 'cpu' or id of gpu, '1', '2', etc. To specify what cuda device is used. 
  machine_learning_device: 0

  ## Algorithm for detecting the granules themselves. These are:
  ##  log: Laplacian of Gaussians
  ##  dog: difference of Gaussians
  algorithm: dog

  ## Smoothing
  ##   Noise in the image will often will disrupt the boundary detection
  ##   we can therefore apply a smoothing to the image to reduce this effect.
  ##   This is given as an float of the Gaussian sigma width.
  smoothing: 1.0

  ## Minimum granule area
  ##   Reject granules that have fewer than this many pixels
  min_area: 60

  ## Kernel
  ##   Name of the kernel used to calculate the gradient
  kernel: fourth_order

  ## Intensity threshold for the detection algorithm
  ##   This is particularly important in transfected cells, where the 
  ##   intensity may vary greatly between cells.
  detector_threshold: 0.1

  ## Intensity threshold for the flood fill
  ## not used with method:intensity
  fill_threshold: 0.5

  ## Minimum intensity of a granule relative to the maximum intensity
  ##   Once again, this is a useful setting where there are brighter granules
  ##   in the image.
  granule_min_intensity: 0.3

  ## When the image of an individual granule is 
  image_padding: 5

  ## Produce images of the granules, showing their position in the frame and their boundaries.
  ##  True: Save an image of the granules for every 100 frames, with their center and boundary marked (results in lots of files which require significant additional processing)
  ##  False: Do not save images of the granules
  granule_images: False

spectrum_fitting:
  ## Experimental spectrum used to fit the theoretical model
  ##   direct: Use the magnitude squared directly
  ##   corrected: Use the standard deviation of the magnitudes
  ## These terms are identical for a spherical granules
  experimental_spectrum: corrected

  ## Fitting orders
  ##   Number of orders to use in the spectrum fitting
  fitting_orders: 15

  ## Fitting Method
  ##  The choice of method used to fit the experimental spectrum
  ##  and calculate the fitting parameters sigma and kappa
  ##  L-BFGS-B: Downhill fitting, errors not available
  ##  least_squares: Uses least squares with an initial sweep. Errors
  ##  least_squares_bending_only: As above but surface tension fixed at 0.0
  ##  least_squares_surface_only: As above but bending rigidity fixed at 0.0
  fitting_method: least_squares

  ## Plot Spectra and Heatmaps
  ##  True: Save a plot of the fluctuation spectra and heatmaps for each granule (large files which require significant additional processing)
  ##  False: Do not plot the spectra and heatmaps for each granule (results are stored in aggregate_fittings.h5 only)
  plot_spectra_and_heatmaps: False

## Parameters used in automated plotting
plotting:
  latex: True
